@model WebCode01.ViewModels.ProjectFileViewModel
@{
    ViewBag.Title = "Editor";
}

<h2>@ViewBag.name</h2>


<div class="row">
    <div id="editor" class="col-md-10">
        @ViewBag.Code
    </div>
</div>

<div class="container">
    <h3>Tooltip Example</h3>
    <a href="#" data-toggle="tooltip" title=@ViewBag.userId id="currUser">Hover over me </a>
</div>

@section scripts
{
    <script src="~/AceEditor/src/ace.js" type="text/javascript" charset="utf-8"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="~/AceEditor/src/ext-modelist.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script>
        function getModeByFileExtension(path){
            var modelist = ace.require("ace/ext/modelist");
            return modelist.getModeForPath(path).mode;
        }
       
        var fileId = @ViewBag.id;
        var fileName = '@ViewBag.name';
        var userId = '@ViewBag.userId';
        var mode = getModeByFileExtension(fileName); // Now ace editor view supports all languages that ace editor supports


        var editor = ace.edit("editor");
        editor.setTheme("ace/theme/monokai");
        editor.getSession().setMode(mode);

        var codeHub = $.connection.codeHub;
        var silent = false;
        codeHub.client.onChange = function (changeData, userId)
        {
            //console.log(changeData, userId);
            silent = true;
            editor.getSession().getDocument().applyDelta(changeData, userId);
            document.getElementById("currUser").innerHTML = userId;
            var posobj = $(".ace_text-input").attr( "style" );
            var posArr = posobj.split(";");
            var cursHeight, left, top;

            for(var ob of posArr){
                if(ob.includes("height")){
                    cursHeight = ob.split(":")[1];
                }
                if(ob.includes("left")){
                    left = ob.split(":")[1];
                }
                if(ob.includes("top")){
                    top = ob.split(":")[1];
                }
            }
            console.log("We got :"+ cursHeight + left + top);
            $('[data-toggle="tooltip"]').tooltip('show');
            silent = false;
        };

        $.connection.hub.start().done(function ()
        {
            codeHub.server.joinDocument(fileId);
            editor.on("change", function (obj)
            {
                if (silent)
                {
                    return;
                }
                console.log(obj);
                var content = editor.getSession().getValue();
                codeHub.server.onChange(obj, fileId, content, userId);
                



            });

        });

    </script>

}
